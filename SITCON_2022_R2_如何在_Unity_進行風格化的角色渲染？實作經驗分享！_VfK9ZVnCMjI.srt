1
00:00:00,000 --> 00:00:02,000
喂

2
00:00:02,000 --> 00:00:03,000
好

3
00:00:03,000 --> 00:00:05,000
感謝大家撥攏前來

4
00:00:05,000 --> 00:00:07,000
然後

5
00:00:07,000 --> 00:00:09,000
這是今天的議程的

6
00:00:09,000 --> 00:00:11,000
目錄

7
00:00:11,000 --> 00:00:13,000
然後在開始

8
00:00:13,000 --> 00:00:15,000
全部開始之前我會工商一下

9
00:00:15,000 --> 00:00:17,000
介紹一下我現在任職的公司

10
00:00:17,000 --> 00:00:19,000
那撥一下

11
00:00:22,000 --> 00:00:24,000
我撥一下我們公司的宣傳短片

12
00:00:30,000 --> 00:00:39,000
我忘了輸出聲音

13
00:01:00,000 --> 00:01:13,000
這是我們公司的概要

14
00:01:13,000 --> 00:01:17,000
我們公司是小數碼,成立於2014年

15
00:01:17,000 --> 00:01:25,000
小數碼是日本AKASUKI集團旗下的子公司

16
00:01:25,000 --> 00:01:29,000
主要負責營運一些與日本知名IPE合作的國際版手遊

17
00:01:29,000 --> 00:01:32,000
後來我們有成立一個子品牌曙光工作室

18
00:01:32,000 --> 00:01:36,000
就是有推出一個敘事解謎的遊戲《傾聽話語》

19
00:01:36,000 --> 00:01:39,000
《傾聽話語》得了滿多國際獎項的

20
00:01:39,000 --> 00:01:42,000
有出手機也有出其他平台

21
00:01:42,000 --> 00:01:46,000
像Switch跟PS上都可以找得到

22
00:01:46,000 --> 00:01:50,000
有興趣的人可以買來玩玩看

23
00:01:50,000 --> 00:01:52,000
最後就是可以介紹我是誰

24
00:01:52,000 --> 00:01:53,000
我是Eric

25
00:01:53,000 --> 00:01:57,000
目前是小數碼的Senior Client Engineer

26
00:01:57,000 --> 00:01:59,000
2015年加入的

27
00:01:59,000 --> 00:02:02,000
我平常上班都在寫遊戲

28
00:02:02,000 --> 00:02:04,000
下班也都在寫Core

29
00:02:04,000 --> 00:02:06,000
時不時也會寫Shader

30
00:02:06,000 --> 00:02:08,000
所以今天才有機會來分享

31
00:02:08,000 --> 00:02:11,000
我平常會分享一些我的Set Project

32
00:02:11,000 --> 00:02:12,000
在我的Twitter上

33
00:02:12,000 --> 00:02:15,000
有興趣的可以Follow我

34
00:02:15,000 --> 00:02:18,000
今天要講的是遊戲角色的風格化渲染

35
00:02:18,000 --> 00:02:22,000
我自己做的是常見的Toon Shader的感覺

36
00:02:22,000 --> 00:02:24,000
在開始實作的細節之前

37
00:02:24,000 --> 00:02:26,000
我們先講一下真實感渲染

38
00:02:26,000 --> 00:02:29,000
跟風格化渲染的簡單介紹

39
00:02:29,000 --> 00:02:34,000
相較於追求現實世界材質的真實感渲染

40
00:02:34,000 --> 00:02:37,000
風格化渲染更加強調的是繪圖風格

41
00:02:37,000 --> 00:02:40,000
像是模擬傳統在陸路動畫的

42
00:02:40,000 --> 00:02:41,000
呈現方式的卡通渲染

43
00:02:41,000 --> 00:02:44,000
就可以算是一種風格化渲染的實作

44
00:02:44,000 --> 00:02:47,000
然後上面這兩個是一模一樣的

45
00:02:47,000 --> 00:02:49,000
一個3D的角色模型

46
00:02:49,000 --> 00:02:53,000
左邊的是用Unity HDRP管線內的PBR材質

47
00:02:53,000 --> 00:02:56,000
右邊的是用卡通渲染

48
00:02:56,000 --> 00:02:59,000
PBR材質基本上就是可以用

49
00:02:59,000 --> 00:03:02,000
在遊戲引擎內用參數

50
00:03:02,000 --> 00:03:04,000
我們就可以很明確的定義說

51
00:03:04,000 --> 00:03:05,000
它這個參數的材質

52
00:03:05,000 --> 00:03:07,000
事實上這個物件的材質

53
00:03:07,000 --> 00:03:09,000
是真實世界的什麼樣的東西

54
00:03:09,000 --> 00:03:10,000
比如說是金屬

55
00:03:10,000 --> 00:03:11,000
比如說是木頭

56
00:03:11,000 --> 00:03:12,000
比如說是非金屬

57
00:03:12,000 --> 00:03:13,000
我們可以這樣定義出來

58
00:03:13,000 --> 00:03:15,000
卡通渲染的話就比較像是

59
00:03:15,000 --> 00:03:16,000
比較是美術導向

60
00:03:16,000 --> 00:03:19,000
就是我覺得那是什麼就是什麼的感覺

61
00:03:19,000 --> 00:03:22,000
光照的方式也不一樣

62
00:03:22,000 --> 00:03:25,000
等一下會講實作

63
00:03:25,000 --> 00:03:28,000
然後圖片就是

64
00:03:28,000 --> 00:03:30,000
我們現在看螢幕上的圖

65
00:03:30,000 --> 00:03:31,000
都是扁的

66
00:03:31,000 --> 00:03:32,000
那要有3D的感覺

67
00:03:32,000 --> 00:03:34,000
其實就是要有明暗的變化

68
00:03:34,000 --> 00:03:36,000
那這其實就是薛德在做的事情

69
00:03:36,000 --> 00:03:39,000
然後計算這個明暗變化的算式

70
00:03:39,000 --> 00:03:42,000
我們通常一般就稱為光照模型

71
00:03:42,000 --> 00:03:44,000
那遊戲界就是從

72
00:03:44,000 --> 00:03:45,000
因為都是即時渲染

73
00:03:45,000 --> 00:03:46,000
遊戲要即時玩的

74
00:03:46,000 --> 00:03:48,000
所以就是從很久以前

75
00:03:48,000 --> 00:03:49,000
就一直在追求怎麼樣

76
00:03:49,000 --> 00:03:50,000
才能讓它的渲染方式

77
00:03:50,000 --> 00:03:51,000
變得更加真實

78
00:03:51,000 --> 00:03:54,000
最左邊是從瑪利歐64那時候開始

79
00:03:54,000 --> 00:03:55,000
就一直發展到現在

80
00:03:55,000 --> 00:03:57,000
那其實2013年之後

81
00:03:57,000 --> 00:04:00,000
遊戲的大宗已經變成PBR材質了

82
00:04:00,000 --> 00:04:03,000
它的渲染出來的效果就是非常真實

83
00:04:03,000 --> 00:04:08,000
那在追求真實的這個類別之下

84
00:04:08,000 --> 00:04:10,000
中間發展出了一個類別

85
00:04:10,000 --> 00:04:12,000
我的遊戲的渲染

86
00:04:12,000 --> 00:04:14,000
我不那麼追求真實

87
00:04:14,000 --> 00:04:15,000
我要更加風格化

88
00:04:15,000 --> 00:04:18,000
更加的像是漫畫或動畫那種感覺

89
00:04:18,000 --> 00:04:19,000
那這個類別

90
00:04:19,000 --> 00:04:21,000
後來也開始漸漸的滿受歡迎的

91
00:04:21,000 --> 00:04:23,000
所以今天主要就是要介紹這個

92
00:04:23,000 --> 00:04:25,000
那現在很多人學的

93
00:04:25,000 --> 00:04:26,000
第一個學的其實

94
00:04:26,000 --> 00:04:30,000
到時候都變成在寫這種NPR學的

95
00:04:30,000 --> 00:04:33,000
那市面上風格化渲染的作品

96
00:04:33,000 --> 00:04:34,000
還滿多的啦

97
00:04:34,000 --> 00:04:36,000
那我最常

98
00:04:36,000 --> 00:04:39,000
像是PS2的大神

99
00:04:39,000 --> 00:04:40,000
大家最近比較年輕

100
00:04:40,000 --> 00:04:41,000
可能已經沒有玩過了

101
00:04:41,000 --> 00:04:44,000
然後像後來的薩爾達

102
00:04:44,000 --> 00:04:46,000
也是滿有名的風格化渲染的實作

103
00:04:46,000 --> 00:04:50,000
然後PS4還有一個二之國

104
00:04:50,000 --> 00:04:51,000
也是非常有名

105
00:04:51,000 --> 00:04:55,000
然後還有大家比較熟悉的

106
00:04:55,000 --> 00:04:56,000
還有原神這種

107
00:04:56,000 --> 00:04:58,000
也是風格化渲染很有名的作品

108
00:04:58,000 --> 00:05:00,000
那我這裡面最常玩的是

109
00:05:00,000 --> 00:05:03,000
我玩的是買遊戲的遊戲

110
00:05:03,000 --> 00:05:04,000
就是我很喜歡買遊戲

111
00:05:04,000 --> 00:05:05,000
但我都沒有玩

112
00:05:05,000 --> 00:05:08,000
然後最左邊這一個呢

113
00:05:08,000 --> 00:05:11,000
這是PBR跟我的Toon Shader的

114
00:05:11,000 --> 00:05:13,000
一個簡單的比較

115
00:05:13,000 --> 00:05:17,000
最左邊的這個影片是PBR的材質

116
00:05:17,000 --> 00:05:27,000
這是場景上很多球

117
00:05:27,000 --> 00:05:29,000
然後一堆光在照他們的感覺

118
00:05:29,000 --> 00:05:31,000
那他的算式其實是為了

119
00:05:31,000 --> 00:05:33,000
比較貼近現實世界渲染出來的效果

120
00:05:33,000 --> 00:05:36,000
那右邊這一個是我寫的Toon Shader

121
00:05:36,000 --> 00:05:38,000
有很多光照在這些球

122
00:05:38,000 --> 00:05:43,000
那光的顏色是用隨機的

123
00:05:43,000 --> 00:05:45,000
那大概會是這種差別

124
00:05:45,000 --> 00:05:49,000
那可能乍看之下還看不太出來

125
00:05:49,000 --> 00:05:51,000
但是基本上就是右邊的這個明暗

126
00:05:51,000 --> 00:05:54,000
他的直接變化是非常銳利的

127
00:05:54,000 --> 00:05:58,000
這其實是Toon Shader的一個特色

128
00:05:58,000 --> 00:06:01,000
那接下來我會講他們常見的

129
00:06:01,000 --> 00:06:05,000
組成風格化渲染的一些要素

130
00:06:05,000 --> 00:06:07,000
然後像剛剛講的就是光照模型

131
00:06:07,000 --> 00:06:10,000
其實是寫Shader的時候非常重要的一環

132
00:06:10,000 --> 00:06:11,000
所以會先講

133
00:06:11,000 --> 00:06:14,000
那剩下就是補充一些像是常見的

134
00:06:14,000 --> 00:06:18,000
寫風格化渲染的Shader常用的一些feature

135
00:06:18,000 --> 00:06:22,000
那第一個就是先講光照模型

136
00:06:22,000 --> 00:06:27,000
那風格化渲染的這種光照模型

137
00:06:27,000 --> 00:06:31,000
我們一般會用漸變貼圖的光照

138
00:06:31,000 --> 00:06:35,000
那他的做法其實是準備一張貼圖

139
00:06:35,000 --> 00:06:37,000
就是右上角你看到他三張圖

140
00:06:37,000 --> 00:06:40,000
然後用光的方向的向量

141
00:06:40,000 --> 00:06:43,000
跟物體表面的法向量的內積

142
00:06:43,000 --> 00:06:44,000
去採樣這張圖

143
00:06:44,000 --> 00:06:46,000
所以簡單來說就是

144
00:06:46,000 --> 00:06:49,000
他的物體的比較面光的地方

145
00:06:49,000 --> 00:06:51,000
他的內積會比較偏向1

146
00:06:51,000 --> 00:06:52,000
那比較背光的地方

147
00:06:52,000 --> 00:06:54,000
內積就會偏向0

148
00:06:54,000 --> 00:06:56,000
那我就用比較面光的地方

149
00:06:56,000 --> 00:06:57,000
就會用貼圖

150
00:06:57,000 --> 00:06:59,000
這張圖右邊的部分

151
00:06:59,000 --> 00:07:02,000
那比較暗的比較背光的地方

152
00:07:02,000 --> 00:07:05,000
就會採樣貼圖左邊的顏色部分

153
00:07:05,000 --> 00:07:08,000
所以可以看到像是

154
00:07:08,000 --> 00:07:10,000
最右邊這顆球

155
00:07:10,000 --> 00:07:11,000
他比較背光的地方

156
00:07:11,000 --> 00:07:13,000
其實是下面這邊

157
00:07:13,000 --> 00:07:14,000
那他採樣的結果

158
00:07:14,000 --> 00:07:16,000
就會用貼圖左邊的顏色

159
00:07:16,000 --> 00:07:18,000
就會比較偏向暗紫色那種感覺

160
00:07:18,000 --> 00:07:20,000
然後像最上面這一個

161
00:07:20,000 --> 00:07:23,000
這是他右邊是白的

162
00:07:23,000 --> 00:07:24,000
左邊是黑的

163
00:07:24,000 --> 00:07:26,000
這個其實就是Two-tone shading

164
00:07:26,000 --> 00:07:30,000
這是最基礎的動漫風格的shader

165
00:07:30,000 --> 00:07:31,000
其實就是用這種方式做

166
00:07:31,000 --> 00:07:32,000
就是說他背光的地方

167
00:07:32,000 --> 00:07:34,000
只要內積值小於1.5

168
00:07:34,000 --> 00:07:35,000
就直接全部變黑了

169
00:07:35,000 --> 00:07:37,000
就會看到左邊那種效果

170
00:07:37,000 --> 00:07:40,000
那實作的影片大概像這樣

171
00:07:43,000 --> 00:07:44,000
大概是這樣啦

172
00:07:44,000 --> 00:07:45,000
比較背光的地方

173
00:07:45,000 --> 00:07:47,000
這個就會直接變圖的左邊

174
00:07:47,000 --> 00:07:50,000
比較面光就會變成圖的右邊的樣子

175
00:07:50,000 --> 00:07:54,000
其實透過調整這個貼圖的顏色

176
00:07:54,000 --> 00:07:55,000
他的漸層的顏色

177
00:07:55,000 --> 00:07:57,000
其實你也可以做出比較

178
00:07:57,000 --> 00:07:59,000
不那麼像卡通渲染的那種shader

179
00:07:59,000 --> 00:08:00,000
也可以做出來

180
00:08:00,000 --> 00:08:03,000
就完全是用你的貼圖來控制

181
00:08:03,000 --> 00:08:04,000
那這其實是很重要的一環

182
00:08:04,000 --> 00:08:06,000
因為一般來說我們在用shader的人

183
00:08:06,000 --> 00:08:07,000
不是程式是美術

184
00:08:07,000 --> 00:08:09,000
那美術喜歡用貼圖

185
00:08:10,000 --> 00:08:12,000
然後

186
00:08:13,000 --> 00:08:16,000
筆觸也是風格化渲染常常研究的議題

187
00:08:16,000 --> 00:08:19,000
那我這邊介紹其中一種實作

188
00:08:19,000 --> 00:08:20,000
然後這張圖是那個

189
00:08:20,000 --> 00:08:22,000
Mijuni AI幫我畫的

190
00:08:22,000 --> 00:08:23,000
所以沒有版權問題

191
00:08:23,000 --> 00:08:25,000
然後

192
00:08:25,000 --> 00:08:27,000
筆觸的話其實

193
00:08:27,000 --> 00:08:30,000
跟剛剛的那個漸變光罩的採樣

194
00:08:30,000 --> 00:08:31,000
其實有點類似

195
00:08:31,000 --> 00:08:32,000
一樣是用光的方向

196
00:08:32,000 --> 00:08:34,000
跟物體表面的髮像量的內積

197
00:08:34,000 --> 00:08:35,000
那月亮

198
00:08:35,000 --> 00:08:38,000
月面光的地方會採樣比較右邊的圖

199
00:08:38,000 --> 00:08:40,000
月背光的地方會採樣比較左邊的圖

200
00:08:40,000 --> 00:08:42,000
所以它這裡其實就是準備

201
00:08:42,000 --> 00:08:43,000
123456

202
00:08:43,000 --> 00:08:45,000
就是很多張

203
00:08:46,000 --> 00:08:47,000
筆觸密度不同的圖片

204
00:08:47,000 --> 00:08:48,000
所以比較亮的地方

205
00:08:48,000 --> 00:08:50,000
我就用筆觸比較稀疏的圖

206
00:08:50,000 --> 00:08:53,000
比較暗的地方我就用筆觸比較密的圖

207
00:08:53,000 --> 00:08:55,000
到時候疊在一起的結果

208
00:08:55,000 --> 00:08:57,000
就會像是右邊這個樣子

209
00:08:57,000 --> 00:08:59,000
那我是偷懶啦

210
00:08:59,000 --> 00:09:01,000
因為我不是美術

211
00:09:01,000 --> 00:09:02,000
所以我其實Photoshop很爛

212
00:09:02,000 --> 00:09:03,000
不太會準備那種

213
00:09:03,000 --> 00:09:05,000
就是剛剛那種筆觸貼圖

214
00:09:05,000 --> 00:09:06,000
我是用

215
00:09:06,000 --> 00:09:08,000
我其實是用Noise圖

216
00:09:08,000 --> 00:09:10,000
然後就是一個噪音圖

217
00:09:10,000 --> 00:09:12,000
然後丟到一個復活圈裡面

218
00:09:12,000 --> 00:09:13,000
loop八次

219
00:09:13,000 --> 00:09:15,000
每次進那個loop的時候

220
00:09:15,000 --> 00:09:18,000
我就把那張圖

221
00:09:18,000 --> 00:09:21,000
做一點scale

222
00:09:21,000 --> 00:09:23,000
就是把它變大變小

223
00:09:23,000 --> 00:09:24,000
然後做一點拉伸的動作

224
00:09:24,000 --> 00:09:26,000
那它其實就會在每次loop的時候

225
00:09:26,000 --> 00:09:28,000
就代表不同密度的樣子

226
00:09:28,000 --> 00:09:29,000
那最後做出來的樣子

227
00:09:29,000 --> 00:09:33,000
會是左邊的這三顆球的樣子

228
00:09:33,000 --> 00:09:35,000
那

229
00:09:35,000 --> 00:09:38,000
這種方法的好處是

230
00:09:38,000 --> 00:09:39,000
你光換一個貼圖

231
00:09:39,000 --> 00:09:41,000
其實它做出來的那個筆觸的效果

232
00:09:41,000 --> 00:09:42,000
就完全不一樣

233
00:09:42,000 --> 00:09:44,000
那這也是

234
00:09:44,000 --> 00:09:45,000
比較for美術

235
00:09:45,000 --> 00:09:48,000
對美術來說就很重要

236
00:09:48,000 --> 00:09:51,000
然後下一個功能是

237
00:09:51,000 --> 00:09:53,000
邊緣光

238
00:09:53,000 --> 00:09:56,000
邊緣光是一個非常經典的功能

239
00:09:56,000 --> 00:09:58,000
那其實就是

240
00:09:58,000 --> 00:10:00,000
我們的人在背光的時候

241
00:10:00,000 --> 00:10:01,000
沿著身體的邊緣

242
00:10:01,000 --> 00:10:02,000
其實是會有一個亮光的

243
00:10:02,000 --> 00:10:04,000
如果是有在

244
00:10:04,000 --> 00:10:06,000
看一下IG網美照應該會看得出來

245
00:10:06,000 --> 00:10:09,000
然後

246
00:10:09,000 --> 00:10:11,000
遊戲裡面其實也常常有

247
00:10:11,000 --> 00:10:12,000
比如說我們玩

248
00:10:12,000 --> 00:10:13,000
最有名的可能是薩爾達

249
00:10:13,000 --> 00:10:16,000
他其實角色身上都有一個白色的邊緣光

250
00:10:16,000 --> 00:10:18,000
等一下會給大家看一下

251
00:10:18,000 --> 00:10:19,000
他死掉的樣子

252
00:10:19,000 --> 00:10:21,000
然後算他的方式呢

253
00:10:21,000 --> 00:10:23,000
其實沒有很複雜

254
00:10:23,000 --> 00:10:24,000
我們是用菲尼爾效應

255
00:10:24,000 --> 00:10:26,000
他在Shader裡面

256
00:10:26,000 --> 00:10:28,000
算是非常非常常用的一個做法

257
00:10:28,000 --> 00:10:30,000
那簡單來說就是

258
00:10:30,000 --> 00:10:32,000
我們看一個平靜的湖泊

259
00:10:32,000 --> 00:10:33,000
然後我們看

260
00:10:33,000 --> 00:10:34,000
比如說國父見陽法

261
00:10:34,000 --> 00:10:35,000
或是隨便日月潭

262
00:10:35,000 --> 00:10:38,000
那就是我們看這個平靜的湖泊

263
00:10:38,000 --> 00:10:39,000
越遠的地方

264
00:10:39,000 --> 00:10:40,000
我們會發現

265
00:10:40,000 --> 00:10:42,000
那個水面很像鏡子

266
00:10:42,000 --> 00:10:43,000
它反射很強

267
00:10:43,000 --> 00:10:44,000
然後越近的地方

268
00:10:44,000 --> 00:10:46,000
比如說就看你腳下的水

269
00:10:46,000 --> 00:10:47,000
你就會發現

270
00:10:47,000 --> 00:10:49,000
那個水會變得很清澈

271
00:10:49,000 --> 00:10:51,000
那這個現象菲尼爾效應

272
00:10:51,000 --> 00:10:52,000
但它實際上的原理是

273
00:10:52,000 --> 00:10:54,000
是因為光的折射跟反射

274
00:10:54,000 --> 00:10:56,000
那它的算式也很複雜

275
00:10:56,000 --> 00:10:58,000
但通常不用用那麼複雜的算式

276
00:10:58,000 --> 00:10:59,000
去表達它

277
00:10:59,000 --> 00:11:00,000
我們一樣就是用內積

278
00:11:00,000 --> 00:11:02,000
來做一個簡易的表達

279
00:11:02,000 --> 00:11:03,000
那內積的話

280
00:11:03,000 --> 00:11:05,000
就是一樣是用物體

281
00:11:05,000 --> 00:11:06,000
就是用這個水面

282
00:11:06,000 --> 00:11:08,000
比如說水面的法向量

283
00:11:08,000 --> 00:11:09,000
那這次不是用光的

284
00:11:09,000 --> 00:11:11,000
光的向量去跟它做內積

285
00:11:11,000 --> 00:11:13,000
而是用我們的View Direction

286
00:11:13,000 --> 00:11:15,000
就是我們鏡頭看到的那個方向

287
00:11:15,000 --> 00:11:17,000
去做一個內積

288
00:11:18,000 --> 00:11:21,000
那夾角越大的地方

289
00:11:21,000 --> 00:11:22,000
我們就會說

290
00:11:22,000 --> 00:11:23,000
就是越遠的地方

291
00:11:23,000 --> 00:11:24,000
我們就覺得

292
00:11:24,000 --> 00:11:26,000
它的那個邊緣方向應該越強

293
00:11:26,000 --> 00:11:27,000
越近的地方

294
00:11:27,000 --> 00:11:28,000
邊緣方向越弱

295
00:11:28,000 --> 00:11:29,000
那最後做出來的

296
00:11:29,000 --> 00:11:31,000
然後最後再讓它乘以一個

297
00:11:31,000 --> 00:11:33,000
次方就Power

298
00:11:33,000 --> 00:11:34,000
我自己說的四次方

299
00:11:34,000 --> 00:11:35,000
它就有一個曲線

300
00:11:35,000 --> 00:11:36,000
然後最後做出來的感覺

301
00:11:36,000 --> 00:11:38,000
就像是這樣子

302
00:11:38,000 --> 00:11:41,000
那我們當然可以再做一些

303
00:11:41,000 --> 00:11:42,000
對不起

304
00:11:42,000 --> 00:11:44,000
做一些參數

305
00:11:44,000 --> 00:11:46,000
就讓它比較

306
00:11:46,000 --> 00:11:48,000
像這個就是邊緣光比較柔和一點

307
00:11:48,000 --> 00:11:49,000
那有一些

308
00:11:49,000 --> 00:11:50,000
就是看遊戲風格

309
00:11:50,000 --> 00:11:52,000
有一些遊戲喜歡這樣子用

310
00:11:52,000 --> 00:11:54,000
那這種就是邊緣光比較強烈一點

311
00:11:54,000 --> 00:11:55,000
像薩爾達

312
00:11:55,000 --> 00:11:58,000
它其實每個角色旁邊是白色的

313
00:11:58,000 --> 00:12:00,000
那比較硬的邊緣光

314
00:12:00,000 --> 00:12:02,000
那也可以再調整一些參數

315
00:12:02,000 --> 00:12:03,000
比如說

316
00:12:03,000 --> 00:12:06,000
你可以再跟光的向量做一些計算

317
00:12:06,000 --> 00:12:08,000
我像我這個就是

318
00:12:08,000 --> 00:12:09,000
除了是邊緣光之外

319
00:12:09,000 --> 00:12:11,000
它只在背光的地方出現

320
00:12:11,000 --> 00:12:12,000
所以它面光的地方

321
00:12:12,000 --> 00:12:13,000
這裡就沒有邊緣光

322
00:12:13,000 --> 00:12:15,000
就是可以做這種調整

323
00:12:15,000 --> 00:12:18,000
好

324
00:12:18,000 --> 00:12:20,000
然後

325
00:12:20,000 --> 00:12:22,000
下一個是描邊

326
00:12:22,000 --> 00:12:24,000
那描邊的話

327
00:12:24,000 --> 00:12:26,000
通常是

328
00:12:26,000 --> 00:12:28,000
學學的人很愛做的一個功能

329
00:12:28,000 --> 00:12:29,000
尤其是做這種風格化渲染

330
00:12:29,000 --> 00:12:31,000
因為我們一般看的那種動畫

331
00:12:31,000 --> 00:12:32,000
卡通還有美漫

332
00:12:32,000 --> 00:12:36,000
其實角色身上都有一個很粗的邊

333
00:12:36,000 --> 00:12:37,000
然後

334
00:12:37,000 --> 00:12:39,000
這裡列出幾種

335
00:12:39,000 --> 00:12:40,000
使作的方法

336
00:12:40,000 --> 00:12:42,000
但其實還有很多種

337
00:12:42,000 --> 00:12:43,000
當然

338
00:12:43,000 --> 00:12:45,000
這幾種是比較常見的

339
00:12:45,000 --> 00:12:46,000
那第一種呢

340
00:12:46,000 --> 00:12:48,000
叫做邊緣偵測

341
00:12:48,000 --> 00:12:49,000
邊緣偵測就是

342
00:12:49,000 --> 00:12:50,000
如果以前有念資工系

343
00:12:50,000 --> 00:12:51,000
跟我一樣念資工系

344
00:12:51,000 --> 00:12:52,000
應該有修過一門課

345
00:12:52,000 --> 00:12:54,000
叫影像處理

346
00:12:54,000 --> 00:12:56,000
那通常就是會

347
00:12:56,000 --> 00:12:58,000
用到裡面有教過的一些算法

348
00:12:58,000 --> 00:12:59,000
那邊緣偵測的算法

349
00:12:59,000 --> 00:13:01,000
其實它是算出

350
00:13:01,000 --> 00:13:03,000
一張圖片啊

351
00:13:03,000 --> 00:13:06,000
每個像素跟其他像素之間做比較

352
00:13:06,000 --> 00:13:08,000
那顏色差異比較大的像素

353
00:13:08,000 --> 00:13:10,000
我們就算它會有一個

354
00:13:10,000 --> 00:13:11,000
就當它會有一個邊

355
00:13:11,000 --> 00:13:13,000
那最後算出來的效果就是

356
00:13:13,000 --> 00:13:14,000
像上面這個腳踏車

357
00:13:14,000 --> 00:13:16,000
算出邊就會像下面這樣子

358
00:13:16,000 --> 00:13:18,000
那以前上課的時候就會

359
00:13:18,000 --> 00:13:19,000
大家應該對一個戴帽子的女人

360
00:13:19,000 --> 00:13:20,000
還有一個廢廢的圖

361
00:13:20,000 --> 00:13:21,000
應該蠻有印象的

362
00:13:21,000 --> 00:13:24,000
就是會對那張圖做這種算法

363
00:13:24,000 --> 00:13:27,000
那遊戲就可以用這個算法

364
00:13:27,000 --> 00:13:29,000
來畫出角色身上動漫的那種邊

365
00:13:29,000 --> 00:13:32,000
尤其是像是吉卜力那一種

366
00:13:32,000 --> 00:13:35,000
邊非常非常多的角色

367
00:13:35,000 --> 00:13:36,000
就可以用這種風格

368
00:13:36,000 --> 00:13:37,000
但是它

369
00:13:37,000 --> 00:13:39,000
它的優點就是全範圍嘛

370
00:13:39,000 --> 00:13:41,000
就是你身上多細的東西

371
00:13:41,000 --> 00:13:42,000
它都可以描出邊

372
00:13:42,000 --> 00:13:43,000
就是看你那個

373
00:13:43,000 --> 00:13:45,000
邊緣偵測的演算法寫得如何

374
00:13:45,000 --> 00:13:47,000
但缺點就是

375
00:13:47,000 --> 00:13:49,000
它邊的粗細其實不好控制

376
00:13:49,000 --> 00:13:51,000
因為角色身上有非常

377
00:13:51,000 --> 00:13:53,000
比如說頭髮 比如說背包

378
00:13:53,000 --> 00:13:55,000
那還有他的身體

379
00:13:55,000 --> 00:13:57,000
那每個地方邊的粗細其實

380
00:13:57,000 --> 00:13:58,000
通常都是要個別控制的

381
00:13:58,000 --> 00:14:00,000
但如果是用這種算法

382
00:14:00,000 --> 00:14:01,000
就不太容易個別控制

383
00:14:01,000 --> 00:14:04,000
你可能需要把資料再塞到模型

384
00:14:04,000 --> 00:14:06,000
或者是角色身上有用的貼圖

385
00:14:06,000 --> 00:14:07,000
再去控制那些邊的粗細

386
00:14:07,000 --> 00:14:09,000
才有辦法做到好

387
00:14:09,000 --> 00:14:12,000
然後下一個算法其實是

388
00:14:12,000 --> 00:14:13,000
看起來最詭異

389
00:14:13,000 --> 00:14:16,000
但其實是市面上最常用的做法

390
00:14:16,000 --> 00:14:18,000
這個叫做頂點外推

391
00:14:18,000 --> 00:14:20,000
它基本上就是把

392
00:14:20,000 --> 00:14:22,000
角色模型畫兩次

393
00:14:22,000 --> 00:14:24,000
第一次畫你那個邊的顏色

394
00:14:24,000 --> 00:14:25,000
比如說這裡是

395
00:14:25,000 --> 00:14:27,000
這個模型要有個黑邊

396
00:14:27,000 --> 00:14:28,000
那我就把

397
00:14:28,000 --> 00:14:30,000
我第一次先畫一個全黑的版本

398
00:14:30,000 --> 00:14:31,000
畫在畫面上

399
00:14:31,000 --> 00:14:32,000
然後呢

400
00:14:32,000 --> 00:14:34,000
我讓它的3D模型的頂點

401
00:14:34,000 --> 00:14:35,000
在Shader裡面

402
00:14:35,000 --> 00:14:36,000
我稍微讓它外推一點

403
00:14:36,000 --> 00:14:39,000
外推就是有點變得胖胖的感覺

404
00:14:39,000 --> 00:14:41,000
所以左邊這個黑色的

405
00:14:41,000 --> 00:14:44,000
其實比中間這個還要胖一點

406
00:14:44,000 --> 00:14:45,000
就只有一點點

407
00:14:45,000 --> 00:14:47,000
然後把它的那個Front Face剔除掉

408
00:14:47,000 --> 00:14:49,000
Front Face就是

409
00:14:49,000 --> 00:14:50,000
外側

410
00:14:50,000 --> 00:14:51,000
你可以想像3D模型

411
00:14:51,000 --> 00:14:52,000
因為都是

412
00:14:52,000 --> 00:14:54,000
都是三角面構成的

413
00:14:54,000 --> 00:14:55,000
所以它一個

414
00:14:55,000 --> 00:14:56,000
這個一個模型

415
00:14:56,000 --> 00:14:57,000
它其實不是實心的

416
00:14:57,000 --> 00:14:58,000
它有點像是一個蛋殼

417
00:14:58,000 --> 00:14:59,000
中空的

418
00:14:59,000 --> 00:15:00,000
那我把它外側剔除掉

419
00:15:00,000 --> 00:15:01,000
它就只渲染

420
00:15:01,000 --> 00:15:03,000
面向內側的那個部分

421
00:15:03,000 --> 00:15:04,000
然後我再畫一次

422
00:15:04,000 --> 00:15:06,000
我原本要畫的那一個

423
00:15:06,000 --> 00:15:08,000
然後當它們疊在一起的時候

424
00:15:08,000 --> 00:15:09,000
就會像右邊這樣子

425
00:15:09,000 --> 00:15:11,000
那這個東西其實是

426
00:15:11,000 --> 00:15:13,000
其實是最常見的做法

427
00:15:13,000 --> 00:15:15,000
因為它的Core好寫到不行

428
00:15:15,000 --> 00:15:17,000
然後它的效能其實也很好

429
00:15:17,000 --> 00:15:18,000
它的缺點就是

430
00:15:18,000 --> 00:15:23,000
它沒有辦法說畫得非常細緻

431
00:15:23,000 --> 00:15:25,000
像是角色

432
00:15:25,000 --> 00:15:26,000
因為它是

433
00:15:26,000 --> 00:15:27,000
讓那個模型變胖胖的嘛

434
00:15:27,000 --> 00:15:28,000
所以它其實身上

435
00:15:28,000 --> 00:15:30,000
有些細節的邊都畫不出來

436
00:15:30,000 --> 00:15:32,000
等一下可以給大家看

437
00:15:32,000 --> 00:15:35,000
然後還有一種方法是用貼圖

438
00:15:35,000 --> 00:15:36,000
就是直接說

439
00:15:36,000 --> 00:15:38,000
角色上那些肌肉的那些黑邊

440
00:15:38,000 --> 00:15:40,000
全部都用貼圖

441
00:15:40,000 --> 00:15:42,000
但貼圖我這裡就不講了

442
00:15:42,000 --> 00:15:44,000
那貼圖就是直接請美術畫那個圖

443
00:15:44,000 --> 00:15:45,000
但它也有缺點啦

444
00:15:45,000 --> 00:15:49,000
就是圖的解析度放大的時候

445
00:15:49,000 --> 00:15:52,000
通常都會看到一些

446
00:15:52,000 --> 00:15:54,000
低像素的那種感覺

447
00:15:54,000 --> 00:15:55,000
就是Pixelize

448
00:15:55,000 --> 00:15:58,000
然後最後一個方法呢

449
00:15:58,000 --> 00:15:59,000
有點冷門

450
00:15:59,000 --> 00:16:01,000
它是用Geometry Shader

451
00:16:01,000 --> 00:16:03,000
就是我們在學Shader的時候

452
00:16:03,000 --> 00:16:06,000
都有個落落長的渲染管線要學

453
00:16:06,000 --> 00:16:10,000
那渲染管線裡面

454
00:16:10,000 --> 00:16:12,000
有一個可選的Shader

455
00:16:12,000 --> 00:16:13,000
就是通常我們不會去寫

456
00:16:13,000 --> 00:16:14,000
但要寫也是可以

457
00:16:14,000 --> 00:16:15,000
叫做Geometry Shader

458
00:16:15,000 --> 00:16:17,000
它可以在Shader裡面生成

459
00:16:17,000 --> 00:16:18,000
3D的面出來

460
00:16:18,000 --> 00:16:19,000
就是動態生成

461
00:16:19,000 --> 00:16:20,000
就是你這個模型出來

462
00:16:20,000 --> 00:16:22,000
我還可以再幫你生更多面出來

463
00:16:22,000 --> 00:16:25,000
然後那它這個做法就是

464
00:16:25,000 --> 00:16:27,000
在這個Shader裡面

465
00:16:27,000 --> 00:16:29,000
沿著物體的3D模型

466
00:16:29,000 --> 00:16:32,000
我在它邊緣都長出

467
00:16:32,000 --> 00:16:35,000
一個四方形的片

468
00:16:35,000 --> 00:16:36,000
就是一個

469
00:16:36,000 --> 00:16:38,000
一小片一小片的模型的感覺

470
00:16:38,000 --> 00:16:40,000
那當這些小片非常密

471
00:16:40,000 --> 00:16:41,000
這些小片的方塊

472
00:16:41,000 --> 00:16:42,000
非常密的時候

473
00:16:42,000 --> 00:16:44,000
你會發現

474
00:16:44,000 --> 00:16:47,000
它角色出現了黑色的邊緣線

475
00:16:47,000 --> 00:16:48,000
那這也是這種做法

476
00:16:48,000 --> 00:16:49,000
那當然有點冷門

477
00:16:49,000 --> 00:16:50,000
但是還是有遊戲這樣做

478
00:16:50,000 --> 00:16:52,000
像那個PS4的

479
00:16:52,000 --> 00:16:54,000
重力異想世界2

480
00:16:54,000 --> 00:16:56,000
Gravity Rush 2

481
00:16:56,000 --> 00:16:58,000
它就是用這種做法

482
00:16:58,000 --> 00:17:00,000
但很冷門

483
00:17:00,000 --> 00:17:02,000
然後這是我做的

484
00:17:02,000 --> 00:17:04,000
左邊是原本的圖

485
00:17:04,000 --> 00:17:05,000
右邊就是有邊線

486
00:17:05,000 --> 00:17:06,000
那我用的方法

487
00:17:06,000 --> 00:17:08,000
就是用剛剛那個頂點外推

488
00:17:08,000 --> 00:17:09,000
但頂點外推的缺點

489
00:17:09,000 --> 00:17:11,000
其實可以看得出來很明顯

490
00:17:11,000 --> 00:17:12,000
雖然像比如說

491
00:17:12,000 --> 00:17:14,000
它像上面這個裝飾的部分

492
00:17:14,000 --> 00:17:15,000
是有做出來

493
00:17:15,000 --> 00:17:16,000
但仔細看的話

494
00:17:16,000 --> 00:17:18,000
你會發現它頭髮中間這裡的

495
00:17:18,000 --> 00:17:19,000
辮子的部分

496
00:17:19,000 --> 00:17:21,000
這裡中間的邊

497
00:17:21,000 --> 00:17:23,000
其實是出不來的

498
00:17:23,000 --> 00:17:25,000
所以其實這種做法就是

499
00:17:25,000 --> 00:17:27,000
你不能單單的只靠

500
00:17:27,000 --> 00:17:29,000
一種做法就完成角色的描邊

501
00:17:29,000 --> 00:17:31,000
通常還要需要

502
00:17:31,000 --> 00:17:33,000
用貼圖用其他方式

503
00:17:33,000 --> 00:17:35,000
去做一些補強

504
00:17:35,000 --> 00:17:37,000
才有辦法做得很完整

505
00:17:39,000 --> 00:17:41,000
然後下一個就是

506
00:17:41,000 --> 00:17:43,000
頭髮的光照

507
00:17:43,000 --> 00:17:45,000
那尤其是做動漫的

508
00:17:45,000 --> 00:17:47,000
其實頭髮也滿重要的

509
00:17:47,000 --> 00:17:49,000
角色頭上的頭髮也滿重要

510
00:17:49,000 --> 00:17:52,000
但其實網路上

511
00:17:52,000 --> 00:17:53,000
講到這一塊的不多

512
00:17:53,000 --> 00:17:55,000
那所以今天就來講一下

513
00:17:55,000 --> 00:17:57,000
那這裡的這個算法叫做

514
00:18:01,000 --> 00:18:03,000
這裡的這個算法叫做Kajiake模型

515
00:18:03,000 --> 00:18:05,000
那它其實是2004年

516
00:18:05,000 --> 00:18:07,000
ATI就是已經被AMD買走了那間公司

517
00:18:09,000 --> 00:18:11,000
裡面的人提出來的一個算法

518
00:18:11,000 --> 00:18:13,000
那它的優點就是

519
00:18:13,000 --> 00:18:15,000
它效能很好

520
00:18:15,000 --> 00:18:17,000
2004年提出來的

521
00:18:17,000 --> 00:18:19,000
那時候效能很差

522
00:18:19,000 --> 00:18:21,000
然後效果也不錯

523
00:18:21,000 --> 00:18:23,000
它可以模擬出我們頭髮的光澤的感覺

524
00:18:23,000 --> 00:18:25,000
那它的算法呢

525
00:18:25,000 --> 00:18:27,000
基本上光照模型

526
00:18:27,000 --> 00:18:29,000
基本上就是在算某個東西的內積

527
00:18:29,000 --> 00:18:31,000
那不管是光的方向還是髮線向量

528
00:18:31,000 --> 00:18:33,000
那這裡呢

529
00:18:33,000 --> 00:18:35,000
跟一般的光照模型

530
00:18:35,000 --> 00:18:37,000
比較大的差別就是

531
00:18:37,000 --> 00:18:39,000
它不是用髮線向量

532
00:18:39,000 --> 00:18:41,000
跟光的方向做內積

533
00:18:41,000 --> 00:18:43,000
而它是用光的方向

534
00:18:43,000 --> 00:18:45,000
跟物體的切線向量

535
00:18:45,000 --> 00:18:47,000
去做內積

536
00:18:47,000 --> 00:18:49,000
那因為是切線的關係

537
00:18:49,000 --> 00:18:51,000
所以它光澤的方向

538
00:18:51,000 --> 00:18:53,000
就會剛好沿著

539
00:18:53,000 --> 00:18:55,000
比如說如果是在頭的話

540
00:18:55,000 --> 00:18:57,000
它就會沿著你的頭去做延伸

541
00:18:59,000 --> 00:19:01,000
那

542
00:19:01,000 --> 00:19:03,000
就

543
00:19:03,000 --> 00:19:05,000
上面這個paper寫得很好

544
00:19:05,000 --> 00:19:07,000
因為它有所有的code

545
00:19:07,000 --> 00:19:09,000
所以我就全部抄下來

546
00:19:09,000 --> 00:19:11,000
然後把它的code全部抄下來

547
00:19:11,000 --> 00:19:13,000
然後放一個noise貼圖

548
00:19:13,000 --> 00:19:15,000
就會像是這樣子

549
00:19:15,000 --> 00:19:17,000
那如果沒有這個noise的圖

550
00:19:17,000 --> 00:19:19,000
這顆球上面的白色部分

551
00:19:19,000 --> 00:19:21,000
noise的圖

552
00:19:21,000 --> 00:19:23,000
用這個noise的圖

553
00:19:23,000 --> 00:19:25,000
只是為了把這個光環做一些offset

554
00:19:25,000 --> 00:19:27,000
然後做完之後

555
00:19:27,000 --> 00:19:29,000
可以做出一點像髮絲的感覺

556
00:19:29,000 --> 00:19:31,000
但做出這種東西之後

557
00:19:31,000 --> 00:19:33,000
這套算法其實不是for風格畫圈

558
00:19:33,000 --> 00:19:35,000
那個時候就是for一些

559
00:19:35,000 --> 00:19:37,000
比較想要追求真實感的遊戲

560
00:19:37,000 --> 00:19:39,000
當然現在有更進階的算法

561
00:19:39,000 --> 00:19:41,000
那我們要

562
00:19:41,000 --> 00:19:43,000
可以改一下就讓它變成for比較

563
00:19:43,000 --> 00:19:45,000
動漫風格的

564
00:19:45,000 --> 00:19:47,000
那如果把

565
00:19:47,000 --> 00:19:49,000
這個noise

566
00:19:49,000 --> 00:19:51,000
我不要用texture

567
00:19:51,000 --> 00:19:53,000
我在shader裡面給一個side波

568
00:19:53,000 --> 00:19:55,000
它就是一個

569
00:19:55,000 --> 00:19:57,000
很規律的side

570
00:19:57,000 --> 00:19:59,000
下一個方法就是用

571
00:19:59,000 --> 00:20:01,000
用

572
00:20:01,000 --> 00:20:03,000
curve texture

573
00:20:03,000 --> 00:20:05,000
就是一個曲線

574
00:20:05,000 --> 00:20:07,000
你可以在遊戲引擎裡面寫一個曲線的編輯器

575
00:20:07,000 --> 00:20:09,000
然後讓美術去拉那個曲線

576
00:20:09,000 --> 00:20:11,000
然後就可以做出這種感覺

577
00:20:11,000 --> 00:20:13,000
基本上你就可以完全控制它

578
00:20:13,000 --> 00:20:15,000
它的offset抖動的程度

579
00:20:15,000 --> 00:20:17,000
你也可以再用更多曲線去控制它的粗細之類的

580
00:20:17,000 --> 00:20:19,000
其實原神就是這樣做

581
00:20:19,000 --> 00:20:21,000
然後

582
00:20:21,000 --> 00:20:23,000
最後就是講

583
00:20:23,000 --> 00:20:25,000
材質編輯器

584
00:20:25,000 --> 00:20:27,000
我是用unity

585
00:20:27,000 --> 00:20:29,000
但如果是用其他引擎的話

586
00:20:29,000 --> 00:20:31,000
材質編輯器會長不太一樣

587
00:20:31,000 --> 00:20:33,000
我自己只能講unity的部分

588
00:20:33,000 --> 00:20:35,000
那unity的部分呢

589
00:20:35,000 --> 00:20:37,000
當你寫完shader

590
00:20:37,000 --> 00:20:39,000
你把變數全部都export出來

591
00:20:39,000 --> 00:20:41,000
給美術條

592
00:20:41,000 --> 00:20:43,000
那他們就會看到左邊的畫面

593
00:20:43,000 --> 00:20:45,000
然後右邊呢

594
00:20:45,000 --> 00:20:47,000
右邊呢就是

595
00:20:47,000 --> 00:20:49,000
你必須去擴展一下材質編輯器

596
00:20:49,000 --> 00:20:51,000
可以讓它長這樣子

597
00:20:51,000 --> 00:20:53,000
好看一點 還可以多了一些分類的效果之類的

598
00:20:53,000 --> 00:20:55,000
所以美術會比較開心

599
00:20:55,000 --> 00:20:57,000
然後

600
00:20:57,000 --> 00:20:59,000
shader可以指定

601
00:20:59,000 --> 00:21:01,000
編輯器的這個class

602
00:21:01,000 --> 00:21:03,000
它要讀哪一個class

603
00:21:03,000 --> 00:21:05,000
那這個class必須去繼承一個base class

604
00:21:05,000 --> 00:21:07,000
叫shaderGUI class

605
00:21:07,000 --> 00:21:09,000
那unity在裡面就會把它當成材質球的編輯器

606
00:21:09,000 --> 00:21:11,000
然後

607
00:21:11,000 --> 00:21:13,000
它的缺點就是你繼承了之後

608
00:21:13,000 --> 00:21:15,000
你的畫面會一片白

609
00:21:15,000 --> 00:21:17,000
什麼東西都沒有 你必須全部重刻你的layout

610
00:21:17,000 --> 00:21:19,000
然後吃什麼變數你都要在這裡面寫

611
00:21:19,000 --> 00:21:21,000
那變數要怎麼顯示呢

612
00:21:21,000 --> 00:21:23,000
就是也是要自己重刻

613
00:21:23,000 --> 00:21:25,000
不過它好在有一些內建的

614
00:21:25,000 --> 00:21:27,000
function可以直接用

615
00:21:27,000 --> 00:21:29,000
比如說integer、floater、slider

616
00:21:29,000 --> 00:21:31,000
那種東西

617
00:21:31,000 --> 00:21:33,000
它那些都是可以做的

618
00:21:33,000 --> 00:21:35,000
那

619
00:21:35,000 --> 00:21:37,000
想要客製化的部分就是還是要自己

620
00:21:37,000 --> 00:21:39,000
繼承material

621
00:21:39,000 --> 00:21:41,000
那

622
00:21:41,000 --> 00:21:43,000
像

623
00:21:43,000 --> 00:21:45,000
剛剛講的

624
00:21:45,000 --> 00:21:47,000
一開始講的那個漸變貼圖的光照

625
00:21:47,000 --> 00:21:49,000
其實我們要每次

626
00:21:49,000 --> 00:21:51,000
每次都在其他軟體

627
00:21:51,000 --> 00:21:53,000
準備一個貼圖

628
00:21:53,000 --> 00:21:55,000
這個製程實在太痛苦了

629
00:21:55,000 --> 00:21:57,000
所以可以的話是希望它在

630
00:21:57,000 --> 00:21:59,000
我們用的那個引擎裡面就可以

631
00:21:59,000 --> 00:22:01,000
直接做出一個貼圖

632
00:22:01,000 --> 00:22:03,000
然後直接生成這個貼圖

633
00:22:03,000 --> 00:22:05,000
然後把貼圖掛到shader上面

634
00:22:05,000 --> 00:22:07,000
這樣子是最好

635
00:22:07,000 --> 00:22:09,000
我就寫了一下

636
00:22:09,000 --> 00:22:11,000
那個材質編輯器裡面的material property drawer

637
00:22:11,000 --> 00:22:13,000
然後就可以

638
00:22:13,000 --> 00:22:15,000
點了之後就出現一個漸變

639
00:22:15,000 --> 00:22:17,000
漸層圖的編輯器

640
00:22:17,000 --> 00:22:19,000
然後它可以輸出這張圖然後直接掛上去

641
00:22:19,000 --> 00:22:21,000
他們就可以直接看到

642
00:22:21,000 --> 00:22:23,000
他們漸變光照的效果

643
00:22:23,000 --> 00:22:25,000
蠻重要的

644
00:22:25,000 --> 00:22:27,000
然後左邊這個是一個GitHub的

645
00:22:27,000 --> 00:22:29,000
TuneShader 右邊這是我的

646
00:22:29,000 --> 00:22:31,000
那這兩個效果其實一模一樣

647
00:22:31,000 --> 00:22:33,000
但左邊這個就會有一點問題

648
00:22:33,000 --> 00:22:35,000
就是雖然

649
00:22:35,000 --> 00:22:37,000
hardcore不好

650
00:22:37,000 --> 00:22:39,000
我們會把它expose出來變成參數

651
00:22:39,000 --> 00:22:41,000
但是全部變成參數

652
00:22:41,000 --> 00:22:43,000
你叫美術用他也用不太下去

653
00:22:43,000 --> 00:22:45,000
因為像左邊這個你就說黃色的部分

654
00:22:45,000 --> 00:22:47,000
內積大於0.7

655
00:22:47,000 --> 00:22:49,000
咖啡色的部分內積大於0.5

656
00:22:49,000 --> 00:22:51,000
然後剩下的部分就用藍色

657
00:22:51,000 --> 00:22:53,000
你跟美術講內積他們一定瘋掉

658
00:22:53,000 --> 00:22:55,000
所以

659
00:22:55,000 --> 00:22:57,000
比較好的方法就是

660
00:22:57,000 --> 00:22:59,000
他們還是比較喜歡用貼圖去控制

661
00:22:59,000 --> 00:23:01,000
他們可以直接去控制這個漸層圖

662
00:23:01,000 --> 00:23:03,000
藍色的部分在哪裡

663
00:23:03,000 --> 00:23:05,000
你不用管內積多少

664
00:23:05,000 --> 00:23:07,000
他們看了就知道

665
00:23:07,000 --> 00:23:09,000
我會比較prefer用右邊那種貼圖的方式

666
00:23:09,000 --> 00:23:11,000
好累

667
00:23:11,000 --> 00:23:13,000
結論

668
00:23:13,000 --> 00:23:15,000
在實作的時候

669
00:23:15,000 --> 00:23:17,000
實作渲染的時候

670
00:23:17,000 --> 00:23:19,000
非常老的演算法仍然非常實用

671
00:23:19,000 --> 00:23:21,000
像

672
00:23:21,000 --> 00:23:23,000
像那個

673
00:23:23,000 --> 00:23:25,000
頭髮的光照

674
00:23:25,000 --> 00:23:27,000
我是用2004年的一套演算法

675
00:23:27,000 --> 00:23:29,000
他到現在

676
00:23:29,000 --> 00:23:31,000
雖然那個時候是for console game

677
00:23:31,000 --> 00:23:33,000
但現在的手機

678
00:23:33,000 --> 00:23:35,000
剛好跟那時候console game有點類似

679
00:23:35,000 --> 00:23:37,000
就是效能有一些限制

680
00:23:37,000 --> 00:23:39,000
所以我們就會

681
00:23:39,000 --> 00:23:41,000
用到一些比較老的演算法

682
00:23:41,000 --> 00:23:43,000
但CP值很高

683
00:23:43,000 --> 00:23:45,000
然後在做邊緣光的時候

684
00:23:45,000 --> 00:23:47,000
也可以看到

685
00:23:47,000 --> 00:23:49,000
其實邊緣光的

686
00:23:49,000 --> 00:23:51,000
實作是用Fanning的效應

687
00:23:51,000 --> 00:23:53,000
那其實是寫shader的人

688
00:23:53,000 --> 00:23:55,000
去觀察大自然的結果

689
00:23:55,000 --> 00:23:57,000
所以如果你喜歡寫shader的話

690
00:23:57,000 --> 00:23:59,000
可以多出去外面走走

691
00:23:59,000 --> 00:24:01,000
然後寫shader的時候

692
00:24:01,000 --> 00:24:03,000
其實雖然shader

693
00:24:03,000 --> 00:24:05,000
做出來就很屌的感覺

694
00:24:05,000 --> 00:24:07,000
但其實到最後

695
00:24:07,000 --> 00:24:09,000
都是要給美術

696
00:24:09,000 --> 00:24:11,000
或其他人去使用的

697
00:24:11,000 --> 00:24:13,000
所以要想一下

698
00:24:13,000 --> 00:24:15,000
你的shader的流程

699
00:24:15,000 --> 00:24:17,000
能不能是

700
00:24:17,000 --> 00:24:19,000
designer friendly的流程

701
00:24:19,000 --> 00:24:21,000
好

702
00:24:21,000 --> 00:24:23,000
然後最後介紹一些shader的學習管道

703
00:24:23,000 --> 00:24:25,000
如果你有興趣的話

704
00:24:25,000 --> 00:24:27,000
那第一個是

705
00:24:27,000 --> 00:24:29,000
先講第二個好了

706
00:24:29,000 --> 00:24:31,000
就是LearnOpenGL

707
00:24:31,000 --> 00:24:33,000
基本上寫shader的人大概都知道

708
00:24:33,000 --> 00:24:35,000
就是一個OpenGL的學習網站

709
00:24:35,000 --> 00:24:37,000
那它有中文跟英文

710
00:24:37,000 --> 00:24:39,000
但中文只有簡體

711
00:24:39,000 --> 00:24:41,000
但我覺得它是做得非常好啦

712
00:24:41,000 --> 00:24:43,000
蠻推薦的

713
00:24:43,000 --> 00:24:45,000
然後下面這個

714
00:24:45,000 --> 00:24:47,000
我應該直接列出來

715
00:24:47,000 --> 00:24:49,000
它是cat-like coding

716
00:24:49,000 --> 00:24:51,000
如果你是Unity的shader有興趣的話

717
00:24:51,000 --> 00:24:53,000
有興趣寫Unity的shader的話

718
00:24:53,000 --> 00:24:55,000
它裡面有非常非常多教學

719
00:24:55,000 --> 00:24:57,000
然後上面這個是

720
00:24:57,000 --> 00:24:59,000
the book of shader

721
00:24:59,000 --> 00:25:01,000
它其實是跟比較應用型的

722
00:25:01,000 --> 00:25:03,000
它上面就是有講很多shader的應用

723
00:25:03,000 --> 00:25:05,000
然後上面有一個online compiler

724
00:25:05,000 --> 00:25:07,000
可以給你直接在上面改它的shader

725
00:25:07,000 --> 00:25:09,000
還蠻有趣的

726
00:25:09,000 --> 00:25:11,000
貼給大家

727
00:25:11,000 --> 00:25:13,000
然後這是一些參考資料

728
00:25:13,000 --> 00:25:15,000
然後最後有一個

729
00:25:15,000 --> 00:25:17,000
議程問卷

730
00:25:17,000 --> 00:25:19,000
麻煩大家幫我掃一下

731
00:25:19,000 --> 00:25:21,000
如果有想要寫問卷的可以掃一下

732
00:25:21,000 --> 00:25:23,000
然後

733
00:25:23,000 --> 00:25:27,000
我的分享就到這邊

734
00:25:27,000 --> 00:25:29,000
那我需要

735
00:25:29,000 --> 00:25:31,000
現在是有什麼

736
00:25:31,000 --> 00:25:33,000
Q&A嗎

737
00:25:33,000 --> 00:25:35,000
還是怎樣

738
00:25:37,000 --> 00:25:39,000
要我開了

739
00:25:41,000 --> 00:25:43,000
我拉過去嗎

740
00:25:43,000 --> 00:25:45,000
這樣

741
00:25:45,000 --> 00:25:47,000
有一個問題

742
00:25:47,000 --> 00:25:49,000
簡報會釋出嗎

743
00:25:49,000 --> 00:25:51,000
簡報會釋出嗎

744
00:25:51,000 --> 00:25:53,000
簡報會釋出嗎

745
00:25:53,000 --> 00:25:55,000
看你要不要放在

746
00:25:55,000 --> 00:25:57,000
共筆之類的地方

747
00:25:57,000 --> 00:25:59,000
好喔

748
00:25:59,000 --> 00:26:01,000
簡報

749
00:26:01,000 --> 00:26:03,000
我整理一下

750
00:26:03,000 --> 00:26:05,000
我想一下要貼在哪

751
00:26:05,000 --> 00:26:07,000
我想一下要貼在哪

752
00:26:09,000 --> 00:26:11,000
我看一下

753
00:26:11,000 --> 00:26:13,000
看不到

754
00:26:15,000 --> 00:26:17,000
做這個需要常常啃論文嗎

755
00:26:17,000 --> 00:26:19,000
喔 啃報 啃報了

756
00:26:19,000 --> 00:26:21,000
有時候看一個論文

757
00:26:21,000 --> 00:26:23,000
就看了24小時忘了吃飯

758
00:26:23,000 --> 00:26:25,000
然後隔天超餓

759
00:26:25,000 --> 00:26:27,000
然後喔 簡報的話

760
00:26:27,000 --> 00:26:29,000
找一個地方釋出

761
00:26:29,000 --> 00:26:31,000
但我可以整理一下

762
00:26:31,000 --> 00:26:33,000
找一個地方釋出啦

763
00:26:33,000 --> 00:26:35,000
它其實有一部分是抄我自己部落格的文章

764
00:26:35,000 --> 00:26:37,000
對 所以

765
00:26:37,000 --> 00:26:39,000
好 我整理一下

766
00:26:39,000 --> 00:26:41,000
看能不能貼到我部落格

767
00:26:41,000 --> 00:26:43,000
大家再去看一些比較重要的部分

768
00:26:43,000 --> 00:26:45,000
然後還有什麼

769
00:26:45,000 --> 00:26:47,000
這邊看起來是沒有

770
00:26:47,000 --> 00:26:49,000
那現場大家有人有問題嗎

771
00:26:49,000 --> 00:26:51,000
可以舉手

772
00:26:51,000 --> 00:26:53,000
可以滴麥克風過去

773
00:26:53,000 --> 00:26:55,000
就是現場在座的各位

774
00:26:59,000 --> 00:27:01,000
都沒有嗎

775
00:27:01,000 --> 00:27:03,000
謝謝

776
00:27:03,000 --> 00:27:05,000
OK

777
00:27:07,000 --> 00:27:09,000
我這邊要問一個好了

778
00:27:09,000 --> 00:27:11,000
就是

779
00:27:11,000 --> 00:27:13,000
對於一個初學者來說

780
00:27:13,000 --> 00:27:15,000
你會覺得說

781
00:27:15,000 --> 00:27:17,000
就是在光線處理上

782
00:27:17,000 --> 00:27:19,000
對於一個初學者來說

783
00:27:19,000 --> 00:27:21,000
是很重要的嗎

784
00:27:21,000 --> 00:27:23,000
還是其實可以放比較後面再學

785
00:27:23,000 --> 00:27:25,000
光線處理喔

786
00:27:25,000 --> 00:27:27,000
好像

787
00:27:27,000 --> 00:27:29,000
不用急著學啦

788
00:27:29,000 --> 00:27:31,000
主要還是

789
00:27:31,000 --> 00:27:33,000
Shader的底層那一塊

790
00:27:33,000 --> 00:27:35,000
就是有很多

791
00:27:35,000 --> 00:27:37,000
比如說渲染管線那一塊

792
00:27:37,000 --> 00:27:39,000
其實要先學的

793
00:27:39,000 --> 00:27:41,000
我其實三年前才開始學Shader

794
00:27:41,000 --> 00:27:43,000
我那時候就跟公司的資深的

795
00:27:43,000 --> 00:27:45,000
Graphic工程師

796
00:27:45,000 --> 00:27:47,000
那個學Shader要怎麼學

797
00:27:47,000 --> 00:27:49,000
他就丟一堆

798
00:27:49,000 --> 00:27:51,000
就丟完OpenGL的網站給我

799
00:27:51,000 --> 00:27:53,000
然後丟渲染管線的圖給我

800
00:27:53,000 --> 00:27:55,000
叫我從頭啃

801
00:27:55,000 --> 00:27:57,000
還有沒有問題

802
00:27:57,000 --> 00:27:59,000
用筆電做這個

803
00:27:59,000 --> 00:28:01,000
會有機會把筆電燒壞嗎

804
00:28:01,000 --> 00:28:03,000
有

805
00:28:03,000 --> 00:28:05,000
我用RTX3060都燒壞了

806
00:28:05,000 --> 00:28:07,000
所以蠻有機會的

807
00:28:07,000 --> 00:28:09,000
不過一開始學的

808
00:28:09,000 --> 00:28:11,000
比較不會啦

809
00:28:11,000 --> 00:28:13,000
一開始學的Shader都是別人1990年

810
00:28:13,000 --> 00:28:15,000
寫的Shader的code

811
00:28:15,000 --> 00:28:17,000
那些教學都是1990年就寫好的

812
00:28:17,000 --> 00:28:19,000
所以那個時候的電腦寫的Shader

813
00:28:19,000 --> 00:28:21,000
也燒不掉你現在的電腦

814
00:28:21,000 --> 00:28:23,000
但後來開始寫一些比較進階的功能

815
00:28:23,000 --> 00:28:25,000
就有機會

816
00:28:25,000 --> 00:28:27,000
請問有創業過嗎

817
00:28:27,000 --> 00:28:29,000
創業

818
00:28:29,000 --> 00:28:31,000
沒有 但我賣過Shader 還蠻好佔的

819
00:28:35,000 --> 00:28:39,000
那我們現在時間應該是也差不多了

820
00:28:39,000 --> 00:28:41,000
謝謝今天Eric帶來精彩的議程

821
00:28:41,000 --> 00:28:43,000
大家掌聲鼓勵

822
00:28:43,000 --> 00:28:45,000
謝謝大家

